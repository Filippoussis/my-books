{"version":3,"sources":["components/book-list/bool-list-item/book-list-item.jsx","components/book-list/book-list.jsx","components/add-form/add-form.jsx","components/app/app.jsx","index.js","mocks/mock-books-data.js"],"names":["BookListItem","item","deleteBook","id","title","author","className","type","onClick","defaultProps","BookList","books","items","map","AddForm","addBook","useState","formData","setFormData","handleChange","evt","target","value","name","state","onSubmit","preventDefault","htmlFor","onChange","required","App","booksData","JSON","parse","localStorage","getItem","updateBooks","bookId","idx","findIndex","newState","slice","removeItem","setItem","stringify","newBook","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccfb642c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './book-list-item.scss';\n\nfunction BookListItem({item, deleteBook}) {\n\n  const {id, title, author} = item;\n\n  return (\n    <article className=\"book\">\n      <div className=\"book__cover\"></div>\n      <div className=\"book__info\">\n        <h3 className=\"book__title\">{title}</h3>\n        <h3 className=\"book__author\">{author}</h3>\n        <button type=\"button\" className=\"book__button\" onClick={() => deleteBook(id)}>Удалить</button>\n      </div>\n    </article>\n  );\n}\n\nBookListItem.defaultProps = {\n  item: {},\n};\n\nBookListItem.propTypes = {\n  item: PropTypes.object,\n  deleteBook: PropTypes.func,\n};\n\nexport default BookListItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport BookListItem from './bool-list-item/book-list-item';\n\nimport './book-list.scss';\n\nfunction BookList({books, deleteBook}) {\n\n  const items = books.map((item) => <li className=\"book-list__item\" key={item.id}><BookListItem item={item} deleteBook={deleteBook} /></li>);\n\n  return (\n    <ul className=\"book-list\" data-testid=\"book-list\">{items}</ul>\n  );\n}\n\nBookList.defaultProps = {\n  books: [],\n};\n\nBookList.propTypes = {\n  books: PropTypes.array,\n  deleteBook: PropTypes.func,\n};\n\nexport default BookList;\n","import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\n\nimport './add-form.scss';\n\nfunction AddForm({addBook}) {\n\n  const [formData, setFormData] = useState({\n    title: '',\n    author: '',\n  });\n\n  const handleChange = (evt) => {\n    const {value, name} = evt.target;\n\n    setFormData((state) => ({\n      ...state,\n      [name]: value,\n    }));\n  };\n\n  const handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    addBook(formData);\n\n    setFormData({\n      title: '',\n      author: '',\n    });\n  };\n\n  const {title, author} = formData;\n\n  return (\n    <form className=\"add-form\" onSubmit={handleSubmit}>\n      <label htmlFor=\"book-title\">Название книги\n        <input type=\"text\" id=\"book-title\" name=\"title\" value={title} onChange={handleChange} required />\n      </label>\n      <label htmlFor=\"book-author\">Автор\n        <input type=\"text\" id=\"book-author\" name=\"author\" value={author} onChange={handleChange} required />\n      </label>\n      <button type=\"submit\" className=\"add-form__button\">Добавить на полку</button>\n    </form>\n  );\n}\n\nAddForm.propTypes = {\n  addBook: PropTypes.func,\n};\n\nexport default AddForm;\n","import React, {useState} from 'react';\nimport BookList from '../book-list/book-list';\nimport AddForm from '../add-form/add-form';\n\nimport './app.scss';\n\nlet id = 100;\n\nfunction App() {\n\n  const booksData = JSON.parse(localStorage.getItem('books')) ?? [];\n\n  const [books, updateBooks] = useState(booksData);\n\n  const addBook = (formData) => {\n\n    const newBook = {\n      id: id++,\n      ...formData,\n    };\n\n    updateBooks((state) => {\n\n      const newState = [\n        ...state,\n        newBook,\n      ];\n\n      localStorage.removeItem('books');\n      localStorage.setItem('books', JSON.stringify(newState));\n\n      return newState;\n    });\n  };\n\n  const deleteBook = (bookId) => {\n    const idx = books.findIndex((item) => item.id === bookId);\n\n    updateBooks((state) => {\n\n      const newState = [\n        ...state.slice(0, idx),\n        ...state.slice(idx + 1),\n      ];\n\n      localStorage.removeItem('books');\n      localStorage.setItem('books', JSON.stringify(newState));\n\n      return newState;\n    });\n  };\n\n  return (\n    <div className=\"page-content\">\n      <h1 className=\"page-title\">Моя книжная полка</h1>\n      <BookList books={books} deleteBook={deleteBook} />\n      <AddForm addBook={addBook} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app/app';\n\nimport {mockBooksData} from './mocks/mock-books-data';\nimport './index.scss';\n\nconst isLocalStorage = localStorage.getItem('books') ?? null;\nif (isLocalStorage === null) {\n  localStorage.setItem('books', JSON.stringify(mockBooksData));\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","export const mockBooksData = [\n  {\n    id: 1,\n    title: 'Айвенго',\n    author: 'Вальтер Скотт',\n  },\n  {\n    id: 2,\n    title: 'Над пропастью во ржи',\n    author: 'Дж. Д. Сэлинджер',\n  },\n];\n"],"sourceRoot":""}